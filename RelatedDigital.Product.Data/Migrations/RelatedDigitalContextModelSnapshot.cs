// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RelatedDigital.Product.Data.Concrete.Contexts;

namespace RelatedDigital.Product.Data.Migrations
{
    [DbContext(typeof(RelatedDigitalContext))]
    partial class RelatedDigitalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RelatedDigital.Product.Data.Concrete.Entities.Colors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProductsProductId")
                        .HasColumnType("int");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("RelatedDigital.Product.Data.Concrete.Entities.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("RelatedDigital.Product.Data.Concrete.Entities.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ColorsId")
                        .HasColumnType("int");

                    b.Property<string>("Sizes")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("ColorsId");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("RelatedDigital.Product.Data.Concrete.Entities.Colors", b =>
                {
                    b.HasOne("RelatedDigital.Product.Data.Concrete.Entities.Products", null)
                        .WithMany("Colors")
                        .HasForeignKey("ProductsProductId");
                });

            modelBuilder.Entity("RelatedDigital.Product.Data.Concrete.Entities.Size", b =>
                {
                    b.HasOne("RelatedDigital.Product.Data.Concrete.Entities.Colors", null)
                        .WithMany("Sizes")
                        .HasForeignKey("ColorsId");
                });
#pragma warning restore 612, 618
        }
    }
}
